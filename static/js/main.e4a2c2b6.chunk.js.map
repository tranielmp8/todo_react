{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4a2c2b6.chunk.js","sourcesContent":["import React from 'react'\n\nconst Form = ({ inputText, setInputText, todos, setTodos, setStatus }) => {\n  // here we can write javascript. :)\n  const inputTextHandler = (e) => {\n    console.log(e.target.value)\n    setInputText(e.target.value)\n  }\n  const submitTodoHandler = (e) => {\n    e.preventDefault()\n    setTodos([\n      ...todos,\n      { text: inputText, completed: false, id: Math.random() * 1000 },\n    ])\n    setInputText('')\n  }\n\n  const statusHandler = (e) => {\n    setStatus(e.target.value)\n  }\n\n  return (\n    <form>\n      <input\n        value={inputText}\n        onChange={inputTextHandler}\n        type=\"text\"\n        className=\"todo-input\"\n      />\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n        <i className=\"fas fa-plus-square\"></i>\n      </button>\n      <div className=\"select\">\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\n          <option value=\"all\">All</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"uncompleted\">Uncompleted</option>\n        </select>\n      </div>\n    </form>\n  )\n}\n\nexport default Form\n","import React from 'react'\n\nconst Todo = ({ text, todo, todos, setTodos }) => {\n  //EVENTS\n  const deleteHandler = () => {\n    setTodos(todos.filter((el) => el.id !== todo.id))\n  }\n  const completeHandler = () => {\n    setTodos(\n      todos.map((item) => {\n        if (item.id === todo.id) {\n          return {\n            ...item,\n            completed: !item.completed,\n          }\n        }\n        return item\n      }),\n    )\n  }\n\n  return (\n    <div className=\"todo\">\n      <li className={`todo-item ${todo.completed ? 'completed' : ''}`}>\n        {text}\n      </li>\n      <button onClick={completeHandler} className=\"complete-btn\">\n        <i className=\"fas fa-check\"></i>\n      </button>\n      <button onClick={deleteHandler} className=\"trash-btn\">\n        <i className=\"fas fa-trash\"></i>\n      </button>\n    </div>\n  )\n}\n\nexport default Todo\n","import React from 'react'\nimport Todo from './Todo'\n\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\n  return (\n    <div className=\"todo-container\">\n      <ul className=\"todo-list\">\n        {filteredTodos.map((todo) => (\n          <Todo\n            setTodos={setTodos}\n            todos={todos}\n            key={todo.id}\n            text={todo.text}\n            todo={todo}\n          />\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default TodoList\n","import React, {useState, useEffect} from \"react\"\nimport './App.css'\n//importing components\nimport Form from './components/Form'\nimport TodoList from './components/TodoList'\n\n\nfunction App() {\n\n//State stuff\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n\n  //only want this part to run once\n  useEffect(() => {\n    getLocalTodos();\n  }, [])\n  //Use EFFECT\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status])\n\n  //functions =======================\n  const filterHandler = () => {\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true ))\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false ))\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n\n  const saveLocalTodos = () => {\n      localStorage.setItem('todos', JSON.stringify(todos))\n  }\n  \n\n  const getLocalTodos = () => {\n    if(localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    }else {\n      let todoLocal = JSON.parse(localStorage.getItem('todos'));\n      setTodos(todoLocal)\n    }\n\n  }\n\n\n  return <div className=\"App\">\n    <header>\n      <h1>Traniel's Todo List</h1>\n    </header>\n    <Form \n      inputText={inputText}\n      todos={todos}\n      setTodos={setTodos} \n      setInputText={setInputText}\n      setStatus = {setStatus}\n      \n      />\n\n    <TodoList setTodos={setTodos} todos={todos} filteredTodos = {filteredTodos} />\n  </div>\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}